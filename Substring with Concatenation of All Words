from collections import Counter

class Solution(object):
    def findSubstring(self, s, words):
        if not s or not words:
            return []

        word_len = len(words[0])
        word_count = len(words)
        total_len = word_len * word_count
        words_counter = Counter(words)
        res = []

        # We only need to shift start by word_len times
        for i in range(word_len):
            left = i
            right = i
            cur_counter = Counter()
            count = 0

            while right + word_len <= len(s):
                word = s[right:right + word_len]
                right += word_len

                if word in words_counter:
                    cur_counter[word] += 1
                    count += 1

                    # If a word occurs more than needed, shrink window
                    while cur_counter[word] > words_counter[word]:
                        left_word = s[left:left + word_len]
                        cur_counter[left_word] -= 1
                        count -= 1
                        left += word_len

                    # If we matched all words
                    if count == word_count:
                        res.append(left)
                else:
                    # reset window
                    cur_counter.clear()
                    count = 0
                    left = right

        return res
